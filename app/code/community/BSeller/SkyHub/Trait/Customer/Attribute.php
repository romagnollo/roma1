<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */

trait BSeller_SkyHub_Trait_Customer_Attribute
{
    
    /** @var Mage_Eav_Model_Resource_Entity_Attribute_Collection */
    protected $attributeCollection;
    
    /** @var array */
    protected $customerAttributes  = array();
    
    /** @var array */
    protected $attributesWhitelist = array();
    
    /** @var array */
    protected $entityTypes         = array();
    
    /** @var Mage_Catalog_Model_Customer */
    protected $customer;
    
    
    /**
     * @param string $attributeCode
     *
     * @return bool
     */
    protected function getAttributeByCode($attributeCode)
    {
        $this->initCustomerAttributes();
        
        if (!isset($this->customerAttributes[$attributeCode])) {
            return false;
        }
        
        return $this->customerAttributes[$attributeCode];
    }
    
    
    /**
     * @param int $attributeId
     *
     * @return bool|Mage_Eav_Model_Entity_Attribute
     */
    protected function getAttributeById($attributeId)
    {
        $this->initCustomerAttributes();
        
        /** @var Mage_Eav_Model_Entity_Attribute $attribute */
        foreach ($this->customerAttributes as $attribute) {
            if ($attributeId == $attribute->getId()) {
                return $attribute;
            }
        }
        
        return false;
    }
    
    
    /**
     * @return array
     */
    protected function getAllAttributeIds()
    {
        $attributeIds = array();
        
        /** @var Mage_Eav_Model_Entity_Attribute $attribute */
        foreach ($this->customerAttributes as $attribute) {
            $attributeIds[$attribute->getId()] = $attribute;
        }
        
        return $attributeIds;
    }
    
    
    /**
     * @return array
     */
    protected function initCustomerAttributes()
    {
        if (!empty($this->customerAttributes)) {
            return $this->customerAttributes;
        }
        
        /** @var Mage_Eav_Model_Entity_Attribute $attribute */
        foreach ($this->getCustomerAttributesCollection() as $attribute) {
            $this->customerAttributes[$attribute->getAttributeCode()] = $attribute;
        }
        
        return $this->customerAttributes;
    }


    /**
     * @return Mage_Eav_Model_Resource_Entity_Attribute_Collection
     */
    protected function getCustomerAttributesCollection()
    {
        /** @var Mage_Eav_Model_Resource_Entity_Attribute_Collection $collection */
        $collection = Mage::getResourceModel('eav/entity_attribute_collection');
        $collection->setEntityTypeFilter($this->getEntityType('customer'));

        return $collection;
    }


    /**
     * @return array
     */
    protected function getIntegrableCustomerAttributes()
    {
        $integrable = array();

        /** @var Mage_Eav_Model_Entity_Attribute $attribute */
        foreach ($this->getCustomerAttributesCollection() as $attribute) {
            if (!$this->validateAttributeForIntegration($attribute)) {
                continue;
            }

            $integrable[$attribute->getId()] = $attribute;
        }

        return $integrable;
    }


    /**
     * @param array $ids
     * @param array $excludeIds
     *
     * @return array
     */
    protected function getCustomerAttributes(array $ids = array(), array $excludeIds = array())
    {
        $this->initCustomerAttributes();
        
        $attributes = array();
        
        /**
         * @var string                          $code
         * @var Mage_Eav_Model_Entity_Attribute $attribute
         */
        foreach ($this->customerAttributes as $code => $attribute) {
            if (!empty($ids) && !in_array($attribute->getId(), $ids)) {
                continue;
            }
            
            if (!empty($excludeIds) && in_array($attribute->getId(), $excludeIds)) {
                continue;
            }
            
            $attributes[$code] = $attribute;
        }
        
        return $attributes;
    }
    
    
    /**
     * @param string $code
     *
     * @return Mage_Eav_Model_Entity_Type
     */
    protected function getEntityType($code)
    {
        if (isset($this->entityTypes[$code])) {
            return $this->entityTypes[$code];
        }
        
        /** @var Mage_Eav_Model_Entity_Type $type */
        $type = Mage::getModel('eav/entity_type');
        $type->loadByCode($code);
        
        $this->entityTypes[$code] = $type;
        
        return $type;
    }
    
    
    /**
     * @return array
     */
    protected function getCustomerAttributeBlacklist()
    {
        /** @var BSeller_SkyHub_Model_Config $config */
        $config = Mage::getSingleton('bseller_skyhub/config_customer');
        return $config->getBlacklistedAttributes();
    }
    
    
    /**
     * @param string $attributeCode
     *
     * @return bool
     */
    protected function isAttributeCodeInBlacklist($attributeCode)
    {
        /** @var BSeller_SkyHub_Model_Config $config */
        $config = Mage::getSingleton('bseller_skyhub/config_customer');
        return $config->isAttributeCodeInBlacklist($attributeCode);
    }


    /**
     * @param string $code
     * @param array  $attributeData
     *
     * @return Mage_Eav_Model_Entity_Attribute
     *
     * @throws Mage_Core_Exception
     */
    protected function createCustomerAttribute($code, array $attributeData)
    {
        /** @var Mage_Eav_Model_Entity_Setup $installer */
        $installer = Mage::getModel('eav/entity_setup', 'core_setup');
        $installer->startSetup();
        $installer->addAttribute('customer', $code, $attributeData);

        //adding the attribute to the adminhtml form
        $usedInCustomerAddressForms = array(
            'adminhtml_customer'
        );
        $attribute = Mage::getSingleton('eav/config')->getAttribute('customer', $code);
        $attribute->setData('used_in_forms', $usedInCustomerAddressForms);
        $attribute->save();

        $installer->endSetup();

        return $this->loadCustomerAttribute($code);
    }

    /**
     * @param $code
     *
     * @return Mage_Eav_Model_Entity_Attribute
     *
     * @throws Mage_Core_Exception
     */
    protected function loadCustomerAttribute($code)
    {
        /** @var Mage_Eav_Model_Entity_Attribute $attribute */
        $attribute = Mage::getModel('eav/entity_attribute')->loadByCode('customer', $code);
        return $attribute;
    }


    /**
     * @param Mage_Eav_Model_Entity_Attribute $attribute
     *
     * @return bool
     */
    protected function validateAttributeForIntegration(Mage_Eav_Model_Entity_Attribute $attribute)
    {
        if (!$attribute->getStoreLabel()) {
            return false;
        }

        if ($this->isAttributeCodeInBlacklist($attribute->getAttributeCode())) {
            return false;
        }

        return true;
    }
}
