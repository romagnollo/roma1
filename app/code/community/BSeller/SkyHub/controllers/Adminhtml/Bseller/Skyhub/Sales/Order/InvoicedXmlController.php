<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2021 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */
class BSeller_SkyHub_Adminhtml_Bseller_Skyhub_Sales_Order_InvoicedXmlController
    extends BSeller_SkyHub_Controller_Admin_Action
{
    use BSeller_SkyHub_Trait_Integrators;
    use BSeller_SkyHub_Trait_Service;

    /**
     * Upload file in xml
     *
     * @return void
     */
    public function uploadXmlAction()
    {
        try {
            $orderId = $this->getRequest()->getPost('order_id');
            $order = $this->getOrderModel()->load($orderId);

            if (!$_FILES['file']) {
                throw new \Exception($this->__('File is required.'));
            }

            if (!$this->getRequest()->has('volume_qty')) {
                throw new \Exception($this->__('Volume Qty is required.'));
            }

            if (!$order->getId()) {
                throw new \Exception($this->__('Order Id not found.'));
            }
    
            $bsellerSkyhubCode = $this->getRequest()->getPost('bseller_skyhub_code');
            if ($order->getBsellerSkyhubCode() != $bsellerSkyhubCode) {
                throw new \Exception($this->__('Order Id not found.'));
            }

            $this->prepareStore($order->getStoreId());

            $file = $_FILES['file'];
            $fileName = $file['name'];
            $pathFile = $file['tmp_name'];
            $volumeQty = $this->getRequest()->getPost('volume_qty');

            $this->invoicedXmlIntegrator()->sendInvoiceXml(
                $bsellerSkyhubCode,
                $volumeQty,
                $pathFile,
                $fileName
            );
            $order->setBsellerSkyhubNfeXml(true);
            $order->save();
        } catch (\Exception $e) {
            $this->_getSession()->addError($e->getMessage());
        }
        $this->_redirect('*/sales_order/view/', array('order_id' => $orderId));
    }

    /**
     * @param null|int $storeId
     *
     * @return $this
     *
     * @throws Mage_Core_Model_Store_Exception
     */
    protected function prepareStore($storeId = null)
    {
        if (!$storeId) {
            $storeId = $this->getRequest()->getPost('store_id', $this->getStoreIterator()->getDefaultStore());
        }

        /** @var Mage_Core_Model_Store $store */
        $store  = Mage::app()->getStore($storeId);

        $this->_getSession()->setData('simulated_store_id', $store->getId());
        $this->getStoreIterator()->simulateStore($store);

        return $this;
    }

    /**
     * @return Mage_Sales_Model_Order
     */
    protected function getOrderModel()
    {
        /** @var Mage_Sales_Model_Order $order */
        $order = Mage::getModel('sales/order');
        return $order;
    }
}
