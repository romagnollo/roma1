<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */

require_once Mage::getModuleDir(null, 'BSeller_SkyHub') . '/vendor/autoload.php';

use SkyHub\Api;
use SkyHub\Api\Service\ServicePdf;
use SkyHub\Api\Service\ServiceMultipart;

class BSeller_SkyHub_Model_Service
{

    use BSeller_SkyHub_Trait_Config;

    const RESPONSE_PDF = 'pdf';

    const RESPONSE_MULTPART = 'multipart';

    /** @var Api */
    protected $api;


    public function __construct()
    {
        $this->initApi();
    }


    /**
     * @return Api
     */
    public function api()
    {
        if (!$this->api) {
            $this->initApi();
        }

        return $this->api;
    }


    /**
     * @return \SkyHub\Api\Service\ServiceAbstract
     */
    public function apiService()
    {
        return $this->api()->service();
    }


    /**
     * @return $this
     */
    public function initApi()
    {
        $service = null;

        $serviceResponseFormat = Mage::registry('bseller_skyhub_response_format');

        if ($serviceResponseFormat == self::RESPONSE_PDF) {
            $service = new ServicePdf(null);
        } else if($serviceResponseFormat == self::RESPONSE_MULTPART) {
            $service = new ServiceMultipart(null);
        }

        $this->api = new Api(
            $this->getServiceEmail(),
            $this->getServiceApiKey(),
            'bZa6Ml0zgS',
            null,
            $service
        );

        if ($this->isLogEnabled()) {
            $logFileName = $this->getLogFilename();
            $logFilePath = Mage::app()->getConfig()->getOptions()->getLogDir();

            $this->apiService()
                ->setLogAllowed(true)
                ->setLogFileName($logFileName)
                ->setLogFilePath($logFilePath);
        }

        return $this;
    }
}
