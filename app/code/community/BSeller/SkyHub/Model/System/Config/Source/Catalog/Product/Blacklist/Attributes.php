<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2019 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */

class BSeller_SkyHub_Model_System_Config_Source_Catalog_Product_Blacklist_Attributes
    extends BSeller_Core_Model_System_Config_Source_Abstract
{
    use BSeller_SkyHub_Trait_Catalog_Product_Attribute;
    use BSeller_SkyHub_Trait_Config;

    /** @var string  */
    const ATTRIBUTE_CODE = 'blacklist';

    /** @var string */
    protected $_group = 'catalog_product_attributes';

    /**
     * Return attribute options
     *
     * @param null $multiselect
     * @return array
     */
    public function optionsKeyValue($multiselect = null)
    {
        $blacklistedAttributes = $this->getProductAttributeBlacklist();
        $attributes = $this->getIntegrableProductAttributes();
        $options    = array();


        $collection = Mage::getResourceModel('bseller_skyhub/catalog_product_attributes_mapping_collection')
                            ->getColumnValues('attribute_id');

        /** @var Mage_Eav_Model_Entity_Attribute $attribute */
        foreach ($attributes as $attribute) {

            if(in_array($attribute->getAttributeCode(), $blacklistedAttributes)){
                continue;
            }

            if(in_array($attribute->getAttributeId(), $collection)){
                continue;
            }

            $label = "{$attribute->getFrontend()->getLabel()} [{$attribute->getAttributeCode()}]";
            $options[$attribute->getId()]['value'] = $attribute->getId();
            $options[$attribute->getId()]['label'] = $label;
        }

        return $options;
    }

    /**
     * Returns the attributes that are currently on the blacklist
     *
     * @return array
     */
    public function getCustomProductAttributeBlacklist()
    {
        $values = $this->getSkyHubModuleConfig(self::ATTRIBUTE_CODE, $this->_group);

        return explode(',', $values);
    }


    /**
     * Save in the setting of Magento the blacklist
     *
     * @param $attributeBlacklist
     * @return Mage_Core_Store_Config
     */
    public function setCustomProductAttributeBlacklist($attributeBlacklist)
    {
        return $this->setSkyHubModuleConfig(self::ATTRIBUTE_CODE, $this->_group, $attributeBlacklist);
    }
}
