<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */

abstract class BSeller_SkyHub_Model_Cron_Abstract
{

    use BSeller_SkyHub_Trait_Data,
        BSeller_SkyHub_Trait_Queue,
        BSeller_SkyHub_Trait_Service,
        BSeller_SkyHub_Trait_Integrators,
        BSeller_SkyHub_Trait_Config,
        BSeller_SkyHub_Trait_Config_Cron,
        BSeller_SkyHub_Trait_Store_Iterator;


    /**
     * @param Mage_Cron_Model_Schedule $schedule
     * @param int|null                 $storeId
     *
     * @return bool
     */
    protected function canRun(Mage_Cron_Model_Schedule $schedule, $storeId = null)
    {
        /**
         * If a Store ID is specified it needs to be privileged.
         */
        if (!empty($storeId) && $this->getStore($storeId)) {
            if (!$this->isModuleEnabled($storeId)) {
                return false;
            }
            
            return true;
        }
    
        /**
         * Otherwise checks if any store is activated to use the module.
         */
        $stores = $this->getStoreIterator()->getStores();
        if (!$this->isModuleEnabled($storeId) && empty($stores)) {
            $schedule->setMessages($this->__('Module is not enabled in configuration.'));
            return false;
        }

        return true;
    }
    
    
    /**
     * Get the current Store. Please, consider the Store Iterator.
     *
     * @param int|null $storeId
     *
     * @return bool|Mage_Core_Model_Store
     */
    protected function getStore($storeId = null)
    {
        try {
            /** @var Mage_Core_Model_Store $store */
            $store = Mage::app()->getStore($storeId);
    
            if ($store && $store->getId()) {
                return $store;
            }
        } catch (Exception $e) {
            Mage::logException($e);
        }
        
        return false;
    }


    /**
     * @return int
     */
    protected function getStoreId()
    {
        return $this->getStore()->getId();
    }


    /**
     * @param \SkyHub\Api\Handler\Response\HandlerInterface $response
     *
     * @return bool
     */
    protected function isErrorResponse($response)
    {
        if (!$response) {
            return true;
        }

        if ($response->invalid()) {
            return true;
        }

        if ($response->exception()) {
            return true;
        }

        return false;
    }
}
